Commit Workflow

Atomic, conventional commits (feat:, fix: …).

Message: <type>(scope): summary + blank line + what/why.

Cursor must show diff for approval; every commit passes pnpm lint & pnpm build.

Project Architecture & Folders

app/, components/ui|layout|shared, lib/, data/, styles/.

Absolute imports (@/…).

Server Components by default; add 'use client' only when needed.

TypeScript Code Style

strict mode, no unchecked index access.

No unused vars, no loose any.

Avoid React.FC; type props explicitly.

Reusable hooks in lib/hooks/; safe typed context.

UI / Design System

Tailwind palette: violet (primary), blue (accent), gray (neutral); radius 2xl, shadow md/lg.

Use shadcn/ui without touching core; customise via classes.

Animations via framer-motion ≤ 350 ms.

All interactive elements have proper ARIA; dark-mode ready.

State Layer

Demo data in typed PromptStore (React Context).

Add prompts with useOptimistic for instant UI.

MVP Functional Checklist

Home / — search + trending.

Catalog /prompts — filters, 300 ms debounce search.

Details /prompt/[id] — copy button, licence badge.

Add /add — modal & route.

RU/EN i18n via next-intl.

Testing

Jest + RTL, coverage ≥ 70 %.

Must test PromptCard (copies) & AddPromptForm (validation).

CI / CD

GitHub Action: checkout → pnpm install → lint → test → build.

Deploy on Vercel with preview for each PR.

Documentation

README.md: Overview, Stack, Getting Started, Scripts, Structure, Contributing.

JSDoc/TSDoc for all public functions.

Cursor Quality Gates

Patch size ≤ 400 LOC.

Don’t touch out-of-scope files.

Any deletion must explain why.

After each patch run pnpm dev and summarise result/screenshot.

Follow these rules for every code patch or doc. Ask for clarification if any requirement conflicts with earlier specs.
