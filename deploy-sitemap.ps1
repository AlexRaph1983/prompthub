# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è sitemap –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ó–∞–ø—É—Å–∫: .\deploy-sitemap.ps1

Write-Host "üöÄ –î–µ–ø–ª–æ–π SEO Sitemap –Ω–∞ —Å–µ—Ä–≤–µ—Ä" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Blue

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$SERVER = "root@your-server"
$PROJECT_PATH = "/root/prompthub"
$BASE_URL = "https://prompt-hub.site"

Write-Host "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
$requiredFiles = @(
    "lib/sitemap.ts",
    "app/sitemap.xml/route.ts",
    "app/robots.txt/route.ts",
    "app/sitemaps/root.xml/route.ts",
    "app/sitemaps/[locale].xml/route.ts",
    "app/sitemaps/categories.xml/route.ts",
    "app/sitemaps/tags.xml/route.ts",
    "app/sitemaps/prompts-[page].xml/route.ts",
    "scripts/migrate-sitemap-indexes.js",
    "scripts/validate-sitemap.js"
)

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "  ‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $file - –ù–ï –ù–ê–ô–î–ï–ù!" -ForegroundColor Red
        exit 1
    }
}

Write-Host "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î..." -ForegroundColor Yellow
try {
    node scripts/migrate-sitemap-indexes.js
    Write-Host "  ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: $_" -ForegroundColor Red
    exit 1
}

Write-Host "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow
try {
    npm run test:sitemap
    Write-Host "  ‚úÖ Unit —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –¢–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã: $_" -ForegroundColor Red
    exit 1
}

Write-Host "üì¶ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
try {
    npm run build
    Write-Host "  ‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: $_" -ForegroundColor Red
    exit 1
}

Write-Host "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..." -ForegroundColor Yellow

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
$serverCommands = @"
cd $PROJECT_PATH
git fetch origin
git reset --hard origin/main
npm install
npm run sitemap:migrate
npm run build
pm2 restart all
"@

try {
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh $SERVER $serverCommands
    Write-Host "  ‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è: $_" -ForegroundColor Red
    exit 1
}

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ sitemap..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å sitemap
$sitemapUrls = @(
    "$BASE_URL/robots.txt",
    "$BASE_URL/sitemap.xml",
    "$BASE_URL/sitemaps/root.xml",
    "$BASE_URL/sitemaps/ru.xml",
    "$BASE_URL/sitemaps/en.xml",
    "$BASE_URL/sitemaps/categories.xml",
    "$BASE_URL/sitemaps/tags.xml"
)

foreach ($url in $sitemapUrls) {
    try {
        $response = Invoke-WebRequest -Uri $url -Method Head -TimeoutSec 10
        if ($response.StatusCode -eq 200) {
            Write-Host "  ‚úÖ $url" -ForegroundColor Green
        } else {
            Write-Host "  ‚ùå $url - –°—Ç–∞—Ç—É—Å: $($response.StatusCode)" -ForegroundColor Red
        }
    } catch {
        Write-Host "  ‚ùå $url - –û—à–∏–±–∫–∞: $_" -ForegroundColor Red
    }
}

Write-Host "üéØ –í–∞–ª–∏–¥–∞—Ü–∏—è sitemap..." -ForegroundColor Yellow
try {
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    ssh $SERVER "cd $PROJECT_PATH && npm run sitemap:validate"
    Write-Host "  ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -ForegroundColor Green
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: $_" -ForegroundColor Red
}

Write-Host "üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º robots.txt
try {
    $robotsContent = Invoke-WebRequest -Uri "$BASE_URL/robots.txt" -UseBasicParsing
    $robotsText = $robotsContent.Content
    
    $robotsChecks = @(
        "User-agent: *",
        "Disallow: /api/",
        "Disallow: /admin/",
        "Sitemap: $BASE_URL/sitemap.xml",
        "Host: prompt-hub.site"
    )
    
    foreach ($check in $robotsChecks) {
        if ($robotsText -match [regex]::Escape($check)) {
            Write-Host "  ‚úÖ robots.txt: $check" -ForegroundColor Green
        } else {
            Write-Host "  ‚ùå robots.txt: $check - –ù–ï –ù–ê–ô–î–ï–ù" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ robots.txt: $_" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º sitemap.xml
try {
    $sitemapContent = Invoke-WebRequest -Uri "$BASE_URL/sitemap.xml" -UseBasicParsing
    $sitemapText = $sitemapContent.Content
    
    $sitemapChecks = @(
        "<?xml version=`"1.0`" encoding=`"UTF-8`"?>",
        "<sitemapindex",
        "/sitemaps/root.xml",
        "/sitemaps/ru.xml",
        "/sitemaps/en.xml",
        "/sitemaps/categories.xml",
        "/sitemaps/tags.xml"
    )
    
    foreach ($check in $sitemapChecks) {
        if ($sitemapText -match [regex]::Escape($check)) {
            Write-Host "  ‚úÖ sitemap.xml: $check" -ForegroundColor Green
        } else {
            Write-Host "  ‚ùå sitemap.xml: $check - –ù–ï –ù–ê–ô–î–ï–ù" -ForegroundColor Red
        }
    }
} catch {
    Write-Host "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ sitemap.xml: $_" -ForegroundColor Red
}

Write-Host "üéâ –î–µ–ø–ª–æ–π sitemap –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Blue
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ sitemap –≤ Google Search Console" -ForegroundColor White
Write-Host "2. –î–æ–±–∞–≤—å—Ç–µ sitemap –≤ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä" -ForegroundColor White
Write-Host "3. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs" -ForegroundColor White
Write-Host "4. –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞—Ö" -ForegroundColor White
