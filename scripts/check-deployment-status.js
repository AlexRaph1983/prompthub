/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–ª–æ—è –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 */

async function checkDeploymentStatus() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –î–ï–ü–õ–û–Ø\n')

  const baseUrl = 'https://prompt-hub.site'

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é API
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é API...')
    try {
      const healthResponse = await fetch(`${baseUrl}/api/health`)
      if (healthResponse.ok) {
        const healthData = await healthResponse.json()
        console.log(`  üìä Health API: ${JSON.stringify(healthData)}`)
      } else {
        console.log(`  ‚ùå Health API error: ${healthResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå Health API error: ${error.message}`)
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...')
    try {
      const statsResponse = await fetch(`${baseUrl}/api/stats`)
      if (statsResponse.ok) {
        const statsData = await statsResponse.json()
        console.log(`  üìä Stats timestamp: ${statsData.timestamp}`)
        console.log(`  üìä Stats cached: ${statsData.cached}`)
        if (statsData.cacheAge) {
          console.log(`  üìä Cache age: ${statsData.cacheAge} seconds`)
        }
      } else {
        console.log(`  ‚ùå Stats API error: ${statsResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå Stats API error: ${error.message}`)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç –µ—â–µ —Ä–∞–∑
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç...')
    const testPromptId = 'cmftyuu1v00539l6hapwra6su'
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        console.log(`  üìä API Details views: ${detailsData.views}`)
        console.log(`  üìä API Details title: ${detailsData.title}`)
      } else {
        console.log(`  ‚ùå API Details error: ${detailsResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          console.log(`  üìä API Recommendations views: ${foundPrompt.prompt?.views}`)
          console.log(`  üìä API Recommendations title: ${foundPrompt.prompt?.title}`)
        } else {
          console.log(`  ‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö`)
        }
      } else {
        console.log(`  ‚ùå API Recommendations error: ${recommendationsResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–ª–æ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error)
  }
}

checkDeploymentStatus().catch(console.error)
