/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 */

async function forceUpdate() {
  console.log('üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–î–ê\n')

  const baseUrl = 'https://prompt-hub.site'

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å...')
    const testPromptId = 'cmftyuu1v00539l6hapwra6su'
    
    let detailsViews = 0
    let recommendationsViews = 0
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        detailsViews = detailsData.views
        console.log(`  üìä API Details views: ${detailsViews}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          recommendationsViews = foundPrompt.prompt?.views || 0
          console.log(`  üìä API Recommendations views: ${recommendationsViews}`)
        }
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    // 2. –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫—ç—à–∏
    console.log('\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∫—ç—à–∏...')
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ API endpoints
    const endpoints = [
      '/api/stats?refresh=true',
      '/api/admin/dashboard',
      '/api/admin/simple-dashboard',
      '/api/prompts?limit=1',
      '/api/recommendations'
    ]
    
    for (const endpoint of endpoints) {
      try {
        await fetch(`${baseUrl}${endpoint}`)
        console.log(`  ‚úÖ ${endpoint} –æ–±–Ω–æ–≤–ª–µ–Ω`)
      } catch (error) {
        console.log(`  ‚ùå ${endpoint} error: ${error.message}`)
      }
    }

    // 3. –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    console.log('\n‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥...')
    await new Promise(resolve => setTimeout(resolve, 5000))

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...')
    
    let newDetailsViews = 0
    let newRecommendationsViews = 0
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        newDetailsViews = detailsData.views
        console.log(`  üìä API Details views: ${newDetailsViews}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          newRecommendationsViews = foundPrompt.prompt?.views || 0
          console.log(`  üìä API Recommendations views: ${newRecommendationsViews}`)
        }
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    // 5. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–ê:')
    console.log(`  üìä Details: ${detailsViews} ‚Üí ${newDetailsViews}`)
    console.log(`  üìä Recommendations: ${recommendationsViews} ‚Üí ${newRecommendationsViews}`)
    
    if (newDetailsViews === newRecommendationsViews) {
      console.log(`  ‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê: –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å —Å–æ–≤–ø–∞–¥–∞—é—Ç!`)
    } else {
      console.log(`  ‚ùå –ü–†–û–ë–õ–ï–ú–ê –í–°–ï –ï–©–ï –ï–°–¢–¨: ${newDetailsViews} ‚â† ${newRecommendationsViews}`)
      console.log(`  üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ù—É–∂–Ω–æ –≤—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–ª–æ–π`)
    }

    console.log('\n‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error)
  }
}

forceUpdate().catch(console.error)
