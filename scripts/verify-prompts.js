// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch –≤ Node.js

async function verifyPrompts() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ...\n');
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç—ã —Å API
    const response = await fetch('http://localhost:3000/api/prompts?limit=20&sort=createdAt&order=desc');
    const data = await response.json();
    
    if (!data.items) {
      console.log('‚ùå –û—à–∏–±–∫–∞: API –Ω–µ –≤–µ—Ä–Ω—É–ª –ø—Ä–æ–º–ø—Ç—ã');
      return;
    }
    
    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤ –≤ –±–∞–∑–µ: ${data.items.length}`);
    
    // –ò—â–µ–º –Ω–∞—à–∏ –Ω–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã
    const newPrompts = [
      '–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é',
      '–î–æ–º–∞—à–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±–µ–∑ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
      '–õ–∏—á–Ω—ã–π –±—é–¥–∂–µ—Ç –ø–æ –ø—Ä–∞–≤–∏–ª—É 50-30-20',
      '–ü–ª–∞–Ω —É–∏–∫-—ç–Ω–¥ –ø–æ–µ–∑–¥–∫–∏',
      '–ë—É–ª–ª–µ—Ç-–ø–æ–π–Ω—Ç—ã —Ä–µ–∑—é–º–µ',
      '–í–µ–∂–ª–∏–≤–æ–µ –∏ –∫—Ä–∞—Ç–∫–æ–µ –¥–µ–ª–æ–≤–æ–µ –ø–∏—Å—å–º–æ',
      '–ò–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º',
      '–£—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü',
      '–ß—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ –µ—Å—Ç—å',
      '–£–±–æ—Ä–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä—ã –∑–∞ 60 –º–∏–Ω—É—Ç'
    ];
    
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤:');
    let foundCount = 0;
    
    newPrompts.forEach(expectedTitle => {
      const found = data.items.find(prompt => 
        prompt.title.includes(expectedTitle) || expectedTitle.includes(prompt.title)
      );
      
      if (found) {
        console.log(`‚úÖ ${found.title}`);
        console.log(`   –ú–æ–¥–µ–ª—å: ${found.model}, –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${found.category}`);
        foundCount++;
      } else {
        console.log(`‚ùå ${expectedTitle} - –ù–ï –ù–ê–ô–î–ï–ù`);
      }
    });
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: ${foundCount}/${newPrompts.length} –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ`);
    
    if (foundCount === newPrompts.length) {
      console.log('üéâ –í—Å–µ –Ω–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è!');
      console.log('\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–æ–º–ø—Ç—ã –Ω–∞ —Å–∞–π—Ç–µ');
    } else {
      console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–ø–æ—Ä—Ç.');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
    console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3000');
  }
}

verifyPrompts();
