const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testAnalyticsWithAuth() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π...\n')

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –∞–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const adminUser = await prisma.user.findFirst({
      where: {
        email: 'yegorovaleksandr@gmail.com'
      }
    })

    console.log('üë§ –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', adminUser ? '–ù–∞–π–¥–µ–Ω' : '–ù–µ –Ω–∞–π–¥–µ–Ω')

    if (!adminUser) {
      console.log('‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    console.log('\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏...')

    // –¢–µ—Å—Ç 1: –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    try {
      const response1 = await fetch('http://localhost:3000/api/admin/search-analytics?days=30')
      console.log('üì§ –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', response1.status, response1.statusText)
      if (!response1.ok) {
        const error1 = await response1.text()
        console.log('‚ùå –û—à–∏–±–∫–∞:', error1)
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
    }

    // –¢–µ—Å—Ç 2: –° API –∫–ª—é—á–æ–º
    try {
      const response2 = await fetch('http://localhost:3000/api/admin/search-analytics?days=30', {
        headers: {
          'Authorization': 'Bearer test-api-key',
          'X-API-Key': 'test-api-key'
        }
      })
      console.log('üì§ –° API –∫–ª—é—á–æ–º:', response2.status, response2.statusText)
      if (!response2.ok) {
        const error2 = await response2.text()
        console.log('‚ùå –û—à–∏–±–∫–∞:', error2)
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message)
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç API –ø—Ä–∏ –æ—à–∏–±–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    try {
      const response3 = await fetch('http://localhost:3000/api/admin/search-analytics?days=30')
      const result3 = await response3.json()
      console.log('üì• –†–µ–∑—É–ª—å—Ç–∞—Ç API:', result3)
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message)
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testAnalyticsWithAuth()
