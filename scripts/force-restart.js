/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
 */

async function forceRestart() {
  console.log('üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê\n')

  const baseUrl = 'https://prompt-hub.site'

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å...')
    const testPromptId = 'cmftyuu1v00539l6hapwra6su'
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        console.log(`  üìä API Details views: ${detailsData.views}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          console.log(`  üìä API Recommendations views: ${foundPrompt.prompt?.views}`)
        }
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    // 2. –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫—ç—à
    console.log('\nüîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à...')
    
    // –û–±–Ω–æ–≤–ª—è–µ–º stats
    try {
      await fetch(`${baseUrl}/api/stats?refresh=true`)
      console.log('  ‚úÖ Stats cache –æ–±–Ω–æ–≤–ª–µ–Ω')
    } catch (error) {
      console.log(`  ‚ùå Stats cache error: ${error.message}`)
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º admin dashboard
    try {
      await fetch(`${baseUrl}/api/admin/dashboard`)
      console.log('  ‚úÖ Admin dashboard –æ–±–Ω–æ–≤–ª–µ–Ω')
    } catch (error) {
      console.log(`  ‚ùå Admin dashboard error: ${error.message}`)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...')
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        console.log(`  üìä API Details views: ${detailsData.views}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          console.log(`  üìä API Recommendations views: ${foundPrompt.prompt?.views}`)
        }
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    console.log('\n‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:', error)
  }
}

forceRestart().catch(console.error)
