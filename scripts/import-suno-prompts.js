const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

const sunoPrompts = {
  "version": "1.0",
  "submitted_by": { "username": "SUNO Master", "user_id": "", "profile_url": "" },
  "taxonomy": {
    "languages": ["ru", "en", "multi"],
    "licenses": ["CC-BY", "CC-BY-SA", "CC0", "Proprietary"],
    "categories": ["audio"],
    "models": ["any", "gpt-4o", "gpt-4o-mini", "gpt-4.1", "gpt-4.1-mini", "claude-3.5-sonnet", "claude-3.5-haiku", "claude-3-opus", "gemini-1.5-pro", "gemini-1.5-flash", "llama-3.1-8b-instruct", "llama-3.1-70b-instruct", "mistral-large-latest", "mistral-small-latest", "command-r-plus", "command-r"],
    "categories": ["audio"]
  },
  "items": [
    {
      "title": "–°–æ–∑–¥–∞–Ω–∏–µ K-Pop —Ç—Ä–µ–∫–∞ —Å —è—Ä–∫–∏–º —Ö–æ—Ä–æ–º –∏ EDM –¥—Ä–æ–ø–æ–º",
      "summary": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π K-Pop —Ç—Ä–µ–∫ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ EDM: –∫—É–ø–ª–µ—Ç—ã-—Ä—ç–ø, –ø—Ä–∏–ø–µ–≤ —Å –≤–æ–∫–∞–ª—å–Ω—ã–º–∏ –≥–∞—Ä–º–æ–Ω–∏—è–º–∏ –∏ –º–æ—â–Ω—ã–π –¥—Ä–æ–ø.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["k-pop", "edm", "chorus", "dance"],
      "prompt_text": "Produce a K-Pop inspired track with rap-driven verses, a soaring vocal chorus layered with harmonies, and an explosive EDM drop. Use bright synth arpeggios, punchy kicks, and sharp claps. Add emotional tension in pre-chorus and release it with a euphoric drop.",
      "usage_instructions": "Keep vocals polished and wide in the stereo field. Use stacked harmonies in the chorus.",
      "examples": ["Reference: BLACKPINK x David Guetta style crossover"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "–ö–∏—Ç–∞–π—Å–∫–∏–π —Ä—ç–ø —Å —ç—Ç–Ω–∏—á–µ—Å–∫–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏",
      "summary": "–°–æ–∑–¥–∞–π —Ç—Ä–µ–∫ –≤ —Å—Ç–∏–ª–µ Chinese Rap —Å —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–º —Ä–µ—á–∏—Ç–∞—Ç–∏–≤–æ–º –∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.",
      "language": "multi",
      "model": "any",
      "category": "audio",
      "license": "CC-BY-SA",
      "tags": ["rap", "china", "ethnic", "hip-hop"],
      "prompt_text": "Generate a Chinese rap track blending trap-style beats with traditional Chinese instruments like guzheng and erhu. Verses should be rhythmic, aggressive, and modern, while the hook includes melodic chanting.",
      "usage_instructions": "Balance modern 808s with organic instrument samples to create cultural contrast.",
      "examples": ["Reference: Higher Brothers, traditional/modern fusion"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "UK Garage —Å –≤–æ–∫–∞–ª–æ–º –∏ —Ç—ë–ø–ª—ã–º–∏ –∞–∫–∫–æ—Ä–¥–∞–º–∏",
      "summary": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π UK Garage —Ç—Ä–µ–∫ —Å –∫–∞—á–∞—é—â–∏–º –±–∏—Ç–æ–º, –≤–æ–∫–∞–ª—å–Ω—ã–º–∏ —Å—ç–º–ø–ª–∞–º–∏ –∏ –≥–ª—É–±–æ–∫–∏–º–∏ –∞–∫–∫–æ—Ä–¥–∞–º–∏.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["uk-garage", "house", "vocals", "groove"],
      "prompt_text": "Create a UK Garage track with shuffling drums, syncopated hi-hats, chopped vocal samples, and warm Rhodes chords. Keep the vibe soulful but danceable with a smooth bassline.",
      "usage_instructions": "Focus on swing in drum programming and vocal chops for authenticity.",
      "examples": ["Reference: MJ Cole, Artful Dodger"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Gabber —Å –∂—ë—Å—Ç–∫–∏–º –¥–∏—Å—Ç–æ—Ä—à–Ω–æ–º –∏ 180 BPM",
      "summary": "–°–¥–µ–ª–∞–π —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π —Ç—Ä–µ–∫ –≤ —Å—Ç–∏–ª–µ Gabber: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ä–∏—Ç–º, –¥–∏—Å—Ç–æ—Ä—à–Ω-–±–æ—á–∫–∞ –∏ –≤—ã—Å–æ–∫–∏–µ —Ç–µ–º–ø—ã.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["gabber", "hardcore", "rave", "techno"],
      "prompt_text": "Produce a Gabber track at 180 BPM with distorted kick drums, aggressive synth stabs, and industrial noise textures. Keep energy relentless and raw.",
      "usage_instructions": "Layer multiple kicks for heaviness. Use short, shouted vocal samples.",
      "examples": ["Reference: Angerfist, Rotterdam Terror Corps"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Lo-Fi Hip-Hop –¥–ª—è —É—á–µ–±—ã",
      "summary": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–π Lo-Fi —Ç—Ä–µ–∫ –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –∏ —É—á—ë–±—ã.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC0",
      "tags": ["lofi", "study", "hip-hop", "chill"],
      "prompt_text": "Create a Lo-Fi Hip-Hop track with dusty drum loops, mellow jazz chords, vinyl crackle, and smooth bass. The vibe should be relaxing and focus-friendly.",
      "usage_instructions": "Avoid sudden dynamic shifts. Keep instrumentation minimal and loop-friendly.",
      "examples": ["Reference: Chillhop Essentials, Lofi Girl style"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Synthwave —Å —Ä–µ—Ç—Ä–æ-—Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º",
      "summary": "–°–æ–∑–¥–∞–π Synthwave-–∫–æ–º–ø–æ–∑–∏—Ü–∏—é —Å —Ä–µ—Ç—Ä–æ-—Å–∏–Ω—Ç–∞–º–∏, –º–æ—â–Ω—ã–º –±–∞—Å–æ–º –∏ –Ω–µ–æ–Ω–æ–≤–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π 80-—Ö.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["synthwave", "retro", "80s", "electronic"],
      "prompt_text": "Generate a Synthwave track with analog synth leads, arpeggiated basslines, and dreamy pads. Tempo 100-110 BPM, cinematic and nostalgic vibe.",
      "usage_instructions": "Use lush reverb and tape saturation to achieve retro feel.",
      "examples": ["Reference: Kavinsky, The Midnight"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Afrobeat —Å –∂–∏–≤—ã–º–∏ –ø–µ—Ä–∫—É—Å—Å–∏—è–º–∏ –∏ –≥–∏—Ç–∞—Ä–æ–π",
      "summary": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π Afrobeat —Ç—Ä–µ–∫ —Å –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–º–∏ —Ä–∏—Ç–º–∞–º–∏, –∂–∏–≤–æ–π –ø–µ—Ä–∫—É—Å—Å–∏–µ–π –∏ –≥–∏—Ç–∞—Ä–Ω—ã–º–∏ —Ä–∏—Ñ—Ñ–∞–º–∏.",
      "language": "multi",
      "model": "any",
      "category": "audio",
      "license": "CC-BY-SA",
      "tags": ["afrobeat", "percussion", "world", "dance"],
      "prompt_text": "Produce an Afrobeat track with polyrhythmic percussion, funky guitars, brass stabs, and call-and-response vocals. Keep groove upbeat and infectious.",
      "usage_instructions": "Highlight congas and shakers. Layer crowd-style chants in the hook.",
      "examples": ["Reference: Burna Boy, Fela Kuti"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Drum & Bass —Å –≤–æ–∫–∞–ª–æ–º –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π",
      "summary": "–°–¥–µ–ª–∞–π Drum & Bass —Ç—Ä–µ–∫ —Å –±—ã—Å—Ç—Ä—ã–º —Ä–∏—Ç–º–æ–º, –≤–æ–∫–∞–ª–æ–º –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–º–∏ –ø–∞–¥–æ–≤—ã–º–∏ —Å–ª–æ—è–º–∏.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["drum-and-bass", "vocals", "breakbeat", "atmosphere"],
      "prompt_text": "Create a Drum & Bass track at 172 BPM with rolling breakbeats, deep basslines, airy pads, and a soulful female vocal hook.",
      "usage_instructions": "Balance heavy bass with spacious atmospheres. Use vocal chops in breakdowns.",
      "examples": ["Reference: Netsky, Hybrid Minds"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Latin Reggaeton —Å —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–º –≤–∞–π–±–æ–º",
      "summary": "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π Reggaeton —Ç—Ä–µ–∫ —Å –ª–∞—Ç–∏–Ω—Å–∫–∏–º —Ä–∏—Ç–º–æ–º, —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Å—ç–º–ø–ª–∞–º–∏.",
      "language": "multi",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["reggaeton", "latin", "dance", "party"],
      "prompt_text": "Produce a Latin Reggaeton track with dembow rhythm, catchy Spanish vocals, tropical synths, and club-ready energy.",
      "usage_instructions": "Keep chorus repetitive and hooky. Use percussive fills for energy.",
      "examples": ["Reference: J Balvin, Bad Bunny"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    },
    {
      "title": "Indie Rock —Å –≥–∏—Ç–∞—Ä–Ω—ã–º–∏ —Ä–∏—Ñ—Ñ–∞–º–∏ –∏ –∂–∏–≤—ã–º –¥—Ä–∞–π–≤–æ–º",
      "summary": "–°–æ–∑–¥–∞–π —Ç—Ä–µ–∫ –≤ —Å—Ç–∏–ª–µ Indie Rock —Å —ç–Ω–µ—Ä–≥–∏—á–Ω–æ–π –≥–∏—Ç–∞—Ä–æ–π, –∂–∏–≤—ã–º –±–∞—Ä–∞–±–∞–Ω–Ω—ã–º —Ä–∏—Ç–º–æ–º –∏ –≤–æ–∫–∞–ª–æ–º.",
      "language": "en",
      "model": "any",
      "category": "audio",
      "license": "CC-BY",
      "tags": ["indie", "rock", "guitar", "band"],
      "prompt_text": "Generate an Indie Rock track with jangly guitars, steady drums, and anthemic vocals. Keep energy uplifting, ideal for festival vibes.",
      "usage_instructions": "Add layered backing vocals for choruses. Use crunchy guitar tones.",
      "examples": ["Reference: Arctic Monkeys, The Strokes"],
      "attribution": { "author_name": "SUNO Master" },
      "visibility": "public",
      "status": "published"
    }
  ]
};

async function importSunoPrompts() {
  console.log('üéµ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç—ã SUNO Master...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SUNO Master
    let user = await prisma.user.findFirst({
      where: {
        OR: [
          { name: 'SUNO Master' },
          { email: 'suno-master@prompthub.com' }
        ]
      }
    });

    if (!user) {
      console.log('üë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SUNO Master...');
      user = await prisma.user.create({
        data: {
          name: 'SUNO Master',
          email: 'suno-master@prompthub.com',
          image: null,
          reputationScore: 100, // –í—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞
          reputationPromptCount: 0,
          reputationLikesCnt: 0,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      });
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SUNO Master —Å–æ–∑–¥–∞–Ω');
    } else {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å SUNO Master –Ω–∞–π–¥–µ–Ω');
    }

    let importedCount = 0;
    let skippedCount = 0;

    for (const item of sunoPrompts.items) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–æ–º–ø—Ç
      const existingPrompt = await prisma.prompt.findFirst({
        where: {
          title: item.title,
          authorId: user.id
        }
      });

      if (existingPrompt) {
        console.log(`‚è≠Ô∏è –ü—Ä–æ–º–ø—Ç "${item.title}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        skippedCount++;
        continue;
      }

      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–ø—Ç
      const prompt = await prisma.prompt.create({
        data: {
          title: item.title,
          description: item.summary,
          prompt: item.prompt_text, // –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ prompt
          tags: item.tags.join(', '), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É
          category: item.category,
          lang: item.language, // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ lang
          model: item.model,
          license: item.license,
          authorId: user.id,
          views: 0,
          averageRating: 0,
          totalRatings: 0,
          createdAt: new Date(),
          updatedAt: new Date()
        }
      });

      console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: "${item.title}"`);
      importedCount++;
    }

    console.log(`\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!`);
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${importedCount}`);
    console.log(`   - –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`);
    console.log(`   - –í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤ SUNO Master: ${importedCount + skippedCount}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –ø—Ä–æ–º–ø—Ç–æ–≤ SUNO Master:', error);
  } finally {
    await prisma.$disconnect();
  }
}

importSunoPrompts();
