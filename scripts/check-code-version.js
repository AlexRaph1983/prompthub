/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –∫–æ–¥–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 */

async function checkCodeVersion() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–ò–ò –ö–û–î–ê –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï\n')

  const baseUrl = 'https://prompt-hub.site'

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–¥–µ...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    try {
      const testResponse = await fetch(`${baseUrl}/api/health`)
      if (testResponse.ok) {
        const testData = await testResponse.json()
        console.log(`  üìä Health API: ${JSON.stringify(testData)}`)
      }
    } catch (error) {
      console.log(`  ‚ùå Health API error: ${error.message}`)
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
    console.log('\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–º–ø—Ç–∞...')
    const testPromptId = 'cmftyuu1v00539l6hapwra6su'
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      if (detailsResponse.ok) {
        const detailsData = await detailsResponse.json()
        console.log(`  üìä API Details views: ${detailsData.views}`)
        console.log(`  üìä API Details title: ${detailsData.title}`)
        console.log(`  üìä API Details author: ${detailsData.author}`)
        console.log(`  üìä API Details rating: ${detailsData.rating}`)
      } else {
        console.log(`  ‚ùå API Details error: ${detailsResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Details error: ${error.message}`)
    }

    try {
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      if (recommendationsResponse.ok) {
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        if (foundPrompt) {
          console.log(`  üìä API Recommendations views: ${foundPrompt.prompt?.views}`)
          console.log(`  üìä API Recommendations title: ${foundPrompt.prompt?.title}`)
          console.log(`  üìä API Recommendations author: ${foundPrompt.prompt?.author?.name}`)
          console.log(`  üìä API Recommendations rating: ${foundPrompt.prompt?.averageRating}`)
        } else {
          console.log(`  ‚ùå –ü—Ä–æ–º–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö`)
        }
      } else {
        console.log(`  ‚ùå API Recommendations error: ${recommendationsResponse.status}`)
      }
    } catch (error) {
      console.log(`  ‚ùå API Recommendations error: ${error.message}`)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑–ª–∏—á–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–∏—è...')
    
    try {
      const detailsResponse = await fetch(`${baseUrl}/api/prompts/${testPromptId}`)
      const recommendationsResponse = await fetch(`${baseUrl}/api/recommendations`)
      
      if (detailsResponse.ok && recommendationsResponse.ok) {
        const detailsData = await detailsResponse.json()
        const recommendationsData = await recommendationsResponse.json()
        const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId)
        
        if (foundPrompt) {
          const detailsViews = detailsData.views
          const recommendationsViews = foundPrompt.prompt?.views
          
          console.log(`  üìä Details views: ${detailsViews}`)
          console.log(`  üìä Recommendations views: ${recommendationsViews}`)
          console.log(`  üìä –†–∞–∑–Ω–∏—Ü–∞: ${Math.abs(detailsViews - recommendationsViews)}`)
          
          if (detailsViews === recommendationsViews) {
            console.log(`  ‚úÖ –ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û: –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç!`)
          } else {
            console.log(`  ‚ùå –ù–ï–ö–û–ù–°–ò–°–¢–ï–ù–¢–ù–û: ${detailsViews} ‚â† ${recommendationsViews}`)
            console.log(`  üîß –ü–†–û–ë–õ–ï–ú–ê: ViewsService —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ-—Ä–∞–∑–Ω–æ–º—É –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø—Ä–æ–º–ø—Ç–æ–≤!`)
          }
        }
      }
    } catch (error) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error.message}`)
    }

    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error)
  }
}

checkCodeVersion().catch(console.error)
