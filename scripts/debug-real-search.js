const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function debugRealSearch() {
  try {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...\n')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ
    const allQueries = await prisma.searchQuery.findMany({
      orderBy: { createdAt: 'desc' },
      take: 10
    })

    console.log('üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ:')
    allQueries.forEach((query, index) => {
      console.log(`${index + 1}. "${query.query}" - ${query.resultsCount} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`)
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${query.userId || '–ì–æ—Å—Ç—å'}`)
      console.log(`   IP: ${query.ipHash}`)
      console.log(`   User-Agent: ${query.userAgent?.substring(0, 50)}...`)
      console.log(`   –í—Ä–µ–º—è: ${query.createdAt.toLocaleString()}`)
      console.log('')
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userQueries = await prisma.searchQuery.findMany({
      where: {
        userId: { not: null }
      },
      orderBy: { createdAt: 'desc' }
    })

    console.log(`üë§ –ó–∞–ø—Ä–æ—Å—ã –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userQueries.length}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –æ—Ç –≥–æ—Å—Ç–µ–π
    const guestQueries = await prisma.searchQuery.findMany({
      where: {
        userId: null
      },
      orderBy: { createdAt: 'desc' }
    })

    console.log(`üëª –ó–∞–ø—Ä–æ—Å—ã –æ—Ç –≥–æ—Å—Ç–µ–π: ${guestQueries.length}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ IP
    const uniqueIPs = await prisma.searchQuery.findMany({
      where: {
        ipHash: { not: null }
      },
      select: {
        ipHash: true
      },
      distinct: ['ipHash']
    })

    console.log(`üåê –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö IP –∞–¥—Ä–µ—Å–æ–≤: ${uniqueIPs.length}`)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000)
    const recentQueries = await prisma.searchQuery.findMany({
      where: {
        createdAt: {
          gte: oneHourAgo
        }
      },
      orderBy: { createdAt: 'desc' }
    })

    console.log(`‚è∞ –ó–∞–ø—Ä–æ—Å—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: ${recentQueries.length}`)

    if (recentQueries.length > 0) {
      console.log('\nüïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—Ä–æ—Å—ã –∑–∞ —á–∞—Å:')
      recentQueries.forEach((query, index) => {
        console.log(`${index + 1}. "${query.query}" (${query.createdAt.toLocaleString()})`)
      })
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error)
  } finally {
    await prisma.$disconnect()
  }
}

debugRealSearch()
