const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function createBasicData() {
  try {
    console.log('üöÄ –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await prisma.user.upsert({
      where: { id: 'promptmaster' },
      update: {},
      create: {
        id: 'promptmaster',
        name: 'PromptMaster',
        email: 'promptmaster@example.com'
      }
    })
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', user.name)
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = [
      { nameRu: '–í–∏–¥–µ–æ', nameEn: 'Video', slug: 'video' },
      { nameRu: '–ê—É–¥–∏–æ', nameEn: 'Audio', slug: 'audio' },
      { nameRu: '–î–∏–∑–∞–π–Ω', nameEn: 'Design', slug: 'design' },
      { nameRu: '–§–æ—Ç–æ', nameEn: 'Image', slug: 'image' },
      { nameRu: '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', nameEn: 'Productivity', slug: 'productivity' },
      { nameRu: '–ü–∏—Å—å–º–æ', nameEn: 'Writing', slug: 'writing' }
    ]
    
    for (const catData of categories) {
      const category = await prisma.category.upsert({
        where: { slug: catData.slug },
        update: {},
        create: catData
      })
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞:', category.nameRu)
    }
    
    console.log('üéâ –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

createBasicData()
