const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkPromptCategories() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑—å –ø—Ä–æ–º–ø—Ç–æ–≤ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ–º–ø—Ç
    const prompt = await prisma.prompt.findFirst({
      include: { categoryRef: true }
    });
    
    console.log('–ü–µ—Ä–≤—ã–π –ø—Ä–æ–º–ø—Ç:');
    console.log('  - –°—Ç–∞—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (category):', prompt?.category);
    console.log('  - –ù–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (categoryId):', prompt?.categoryId);
    console.log('  - –°–≤—è–∑—å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π (categoryRef):', prompt?.categoryRef?.nameRu || '–ù–µ—Ç —Å–≤—è–∑–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–º–ø—Ç–æ–≤ —Å categoryId
    const withCategoryId = await prisma.prompt.count({
      where: { categoryId: { not: null } }
    });
    
    const withoutCategoryId = await prisma.prompt.count({
      where: { categoryId: null }
    });
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`  - –ü—Ä–æ–º–ø—Ç–æ–≤ —Å categoryId: ${withCategoryId}`);
    console.log(`  - –ü—Ä–æ–º–ø—Ç–æ–≤ –±–µ–∑ categoryId: ${withoutCategoryId}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.category.findMany({
      select: { id: true, nameRu: true, slug: true, promptCount: true }
    });
    
    console.log('\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:');
    categories.forEach(cat => {
      console.log(`  - ${cat.nameRu} (${cat.slug}): ${cat.promptCount} –ø—Ä–æ–º–ø—Ç–æ–≤`);
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkPromptCategories();
