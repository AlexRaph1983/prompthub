const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function testApiPrompts() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–æ–º–ø—Ç–æ–≤...');
  
  try {
    // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const directPrompts = await prisma.prompt.findMany({
      take: 5,
      select: {
        id: true,
        title: true,
        description: true,
        prompt: true,
        author: {
          select: {
            name: true
          }
        }
      }
    });
    
    console.log('üìä –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î:');
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–ø—Ç–æ–≤: ${directPrompts.length}`);
    directPrompts.forEach((prompt, index) => {
      console.log(`${index + 1}. "${prompt.title}"`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${prompt.description ? prompt.description.substring(0, 50) + '...' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
      console.log(`   –ü—Ä–æ–º–ø—Ç: ${prompt.prompt ? prompt.prompt.substring(0, 50) + '...' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
      console.log(`   –ê–≤—Ç–æ—Ä: ${prompt.author?.name || 'Unknown'}`);
      console.log('');
    });
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º PromptRepository...');
    const { promptRepository } = await import('./lib/repositories/promptRepository.js');
    
    const repoResult = await promptRepository.listPrompts({
      limit: 5
    });
    
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç PromptRepository:');
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–ø—Ç–æ–≤: ${repoResult.items.length}`);
    console.log(`Has more: ${repoResult.hasMore}`);
    console.log(`Next cursor: ${repoResult.nextCursor}`);
    
    repoResult.items.forEach((prompt, index) => {
      console.log(`${index + 1}. "${prompt.title}"`);
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${prompt.description ? prompt.description.substring(0, 50) + '...' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
      console.log(`   –ü—Ä–æ–º–ø—Ç: ${prompt.prompt ? prompt.prompt.substring(0, 50) + '...' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢'}`);
      console.log(`   –ê–≤—Ç–æ—Ä: ${prompt.author || 'Unknown'}`);
      console.log('');
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API –ø—Ä–æ–º–ø—Ç–æ–≤:', error);
    console.error('Stack trace:', error.stack);
  } finally {
    await prisma.$disconnect();
  }
}

testApiPrompts();
