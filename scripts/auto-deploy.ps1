# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º plink (PuTTY Link)
param(
    [string]$ServerIP = "83.166.244.71",
    [string]$Username = "root",
    [string]$Password = "yqOdhMhP41s5827h"
)

Write-Host "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –î–ï–ü–õ–û–ô –ù–ê –°–ï–†–í–ï–†" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ plink
if (-not (Test-Path "plink.exe")) {
    Write-Host "‚ùå plink.exe –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–∞—á–∏–≤–∞–µ–º..." -ForegroundColor Red
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ plink
    Write-Host "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∞—á–∞–π—Ç–µ plink.exe –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Yellow
    exit 1
}

$commands = @(
    "cd /root/prompthub && git fetch origin && git reset --hard origin/main",
    "cd /root/prompthub && npm install",
    "cd /root/prompthub && npx prisma generate",
    "cd /root/prompthub && npx prisma db push --accept-data-loss",
    "cd /root/prompthub && npx tsx scripts/add-promptmaster-prompts.ts --file prompts_prompthub3.json",
    "cd /root/prompthub && npm run build",
    "cd /root/prompthub && pm2 stop prompthub || true && pm2 delete prompthub || true && pm2 start ecosystem.config.js || pm2 start npm --name 'prompthub' -- start",
    "cd /root/prompthub && pm2 save"
)

$stepNames = @(
    "1. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞",
    "2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", 
    "3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Prisma",
    "4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
    "5. –ò–º–ø–æ—Ä—Ç –ø—Ä–æ–º–ø—Ç–æ–≤",
    "6. –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    "7. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    "8. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
)

for ($i = 0; $i -lt $commands.Length; $i++) {
    Write-Host "`n$($stepNames[$i])..." -ForegroundColor Yellow
    
    try {
        $result = & .\plink.exe -ssh -pw $Password $Username@$ServerIP $commands[$i] 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ $($stepNames[$i]) - –£–°–ü–ï–®–ù–û" -ForegroundColor Green
        } else {
            Write-Host "‚ùå $($stepNames[$i]) - –û–®–ò–ë–ö–ê" -ForegroundColor Red
            Write-Host "–†–µ–∑—É–ª—å—Ç–∞—Ç: $result" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå $($stepNames[$i]) - –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: $($_.Exception.Message)" -ForegroundColor Red
    }
}

Write-Host "`nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
try {
    $response = Invoke-WebRequest -Uri "http://$ServerIP:3000/api/prompts?limit=10" -UseBasicParsing -TimeoutSec 10
    $prompts = $response.Content | ConvertFrom-Json
    Write-Host "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–ø—Ç–æ–≤: $($prompts.items.Count)" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤
    $newPrompts = $prompts.items | Where-Object { $_.title -like "*–ø–∏—Ç–∞–Ω–∏–µ*" -or $_.title -like "*—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞*" -or $_.title -like "*–±—é–¥–∂–µ—Ç*" }
    if ($newPrompts.Count -gt 0) {
        Write-Host "üéâ –ù–û–í–´–ï –ü–†–û–ú–ü–¢–´ –ù–ê–ô–î–ï–ù–´ –ù–ê –°–ê–ô–¢–ï!" -ForegroundColor Green
        $newPrompts | ForEach-Object { Write-Host "  ‚Ä¢ $($_.title)" -ForegroundColor Cyan }
    } else {
        Write-Host "‚ö†Ô∏è  –ù–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –∏–º–ø–æ—Ä—Ç –Ω–µ –ø—Ä–æ—à–µ–ª." -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ API: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüåê –°–∞–π—Ç: http://$ServerIP:3000" -ForegroundColor Cyan
Write-Host "üìä API: http://$ServerIP:3000/api/prompts?limit=10" -ForegroundColor Cyan
