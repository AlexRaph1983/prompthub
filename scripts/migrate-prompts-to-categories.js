const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function migratePromptsToCategories() {
  try {
    console.log('üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç—ã –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    
    // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞ –Ω–æ–≤—ã–µ slug
    const categoryMapping = {
      'Music': 'music',
      'Audio': 'audio', 
      'audio': 'audio',
      'Video': 'video',
      'Writing': 'marketing',
      'writing': 'marketing',
      'Arts': 'design',
      'arts': 'design',
      'Lifestyle': 'business',
      'lifestyle': 'business',
      'Health': 'health',
      'Legal': 'legal',
      'Education': 'education',
      'Marketing': 'marketing',
      'Design': 'design',
      'Code': 'code',
      'SEO': 'seo',
      'Chat': 'chat',
      'Image': 'image',
      '3D': '3d',
      'Animation': 'animation',
      'Business': 'business',
      'Research': 'research',
      'Analysis': 'analysis',
      'Creative': 'creative',
      'Productivity': 'productivity',
      'Gaming': 'gaming',
      'Finance': 'finance',
      'Cooking': 'cooking',
      'DevOps': 'code', // DevOps ‚Üí –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
      'Customer Support': 'business', // Customer Support ‚Üí –±–∏–∑–Ω–µ—Å
      'Utilities': 'productivity', // Utilities ‚Üí –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      'Translation': 'marketing' // Translation ‚Üí –Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤
    };
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–º–ø—Ç—ã
    const prompts = await prisma.prompt.findMany({
      select: {
        id: true,
        title: true,
        category: true
      }
    });
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–ø—Ç–æ–≤: ${prompts.length}`);
    
    let migratedCount = 0;
    let skippedCount = 0;
    
    for (const prompt of prompts) {
      const oldCategory = prompt.category;
      const newSlug = categoryMapping[oldCategory];
      
      if (!newSlug) {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–º–ø—Ç "${prompt.title}" - –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${oldCategory}`);
        skippedCount++;
        continue;
      }
      
      // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ slug
      const category = await prisma.category.findUnique({
        where: { slug: newSlug }
      });
      
      if (!category) {
        console.log(`‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å slug "${newSlug}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
        skippedCount++;
        continue;
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–º–ø—Ç
      await prisma.prompt.update({
        where: { id: prompt.id },
        data: { categoryId: category.id }
      });
      
      console.log(`‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω: "${prompt.title}" (${oldCategory} ‚Üí ${category.nameRu})`);
      migratedCount++;
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏:`);
    console.log(`  - –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${migratedCount}`);
    console.log(`  - –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    console.log('\nüìä –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    const categories = await prisma.category.findMany();
    
    for (const category of categories) {
      const count = await prisma.prompt.count({
        where: { categoryId: category.id }
      });
      
      await prisma.category.update({
        where: { id: category.id },
        data: { promptCount: count }
      });
      
      console.log(`‚úÖ ${category.nameRu}: ${count} –ø—Ä–æ–º–ø—Ç–æ–≤`);
    }
    
    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

migratePromptsToCategories();
