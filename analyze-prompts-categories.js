const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function analyzePromptsCategories() {
  try {
    console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç—ã –∏ –∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–º–ø—Ç—ã
    const prompts = await prisma.prompt.findMany({
      select: {
        id: true,
        title: true,
        category: true,
        categoryId: true
      }
    });
    
    console.log(`–í—Å–µ–≥–æ –ø—Ä–æ–º–ø—Ç–æ–≤: ${prompts.length}`);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ä—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const byOldCategory = {};
    prompts.forEach(p => {
      const cat = p.category || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
      byOldCategory[cat] = (byOldCategory[cat] || 0) + 1;
    });
    
    console.log('\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Å—Ç–∞—Ä—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    Object.entries(byOldCategory).forEach(([cat, count]) => {
      console.log(`- ${cat}: ${count}`);
    });
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑—å —Å –Ω–æ–≤—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const promptsWithNewCategory = await prisma.prompt.findMany({
      where: {
        categoryId: {
          not: null
        }
      },
      select: {
        id: true,
        title: true,
        category: true,
        categoryId: true,
        categoryRef: {
          select: {
            nameRu: true,
            nameEn: true,
            slug: true
          }
        }
      }
    });
    
    console.log(`\nüìä –ü—Ä–æ–º–ø—Ç—ã —Å –Ω–æ–≤—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏: ${promptsWithNewCategory.length}`);
    
    const byNewCategory = {};
    promptsWithNewCategory.forEach(p => {
      const catName = p.categoryRef ? p.categoryRef.nameRu : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è';
      byNewCategory[catName] = (byNewCategory[catName] || 0) + 1;
    });
    
    console.log('\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–æ–≤—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
    Object.entries(byNewCategory).forEach(([cat, count]) => {
      console.log(`- ${cat}: ${count}`);
    });
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –º–µ–Ω—é
    const menuCategories = await prisma.category.findMany({
      select: {
        id: true,
        nameRu: true,
        nameEn: true,
        slug: true,
        promptCount: true
      },
      orderBy: {
        sortOrder: 'asc'
      }
    });
    
    console.log('\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –º–µ–Ω—é:');
    menuCategories.forEach(cat => {
      console.log(`- ${cat.nameRu} (${cat.slug}): ${cat.promptCount} –ø—Ä–æ–º–ø—Ç–æ–≤`);
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

analyzePromptsCategories();
