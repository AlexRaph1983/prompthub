const https = require('https');

async function checkViews() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–†–û–°–ú–û–¢–†–û–í –ù–ê –ü–†–û–î–ê–ö–®–ï–ù–ï');
  console.log('==================================');
  
  const testPromptId = 'cmftyuu1v00539l6hapwra6su';
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API Details
    const detailsResponse = await fetch(`https://prompt-hub.site/api/prompts/${testPromptId}`);
    const detailsData = await detailsResponse.json();
    const detailsViews = detailsData.views;
    console.log(`üìä API Details views: ${detailsViews}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API Recommendations
    const recommendationsResponse = await fetch('https://prompt-hub.site/api/recommendations');
    const recommendationsData = await recommendationsResponse.json();
    const foundPrompt = recommendationsData.find(item => item.prompt?.id === testPromptId);
    const recommendationsViews = foundPrompt?.prompt?.views || 0;
    console.log(`üìä API Recommendations views: ${recommendationsViews}`);
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –ê–ù–ê–õ–ò–ó:');
    if (detailsViews === recommendationsViews) {
      console.log(`‚úÖ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê! –ó–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç: ${detailsViews}`);
    } else {
      console.log(`‚ùå –ü–†–û–ë–õ–ï–ú–ê –í–°–ï –ï–©–ï –ï–°–¢–¨: ${detailsViews} ‚â† ${recommendationsViews}`);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

checkViews();
